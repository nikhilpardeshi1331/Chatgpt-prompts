import configparser
from google.cloud import storage

def read_gcs_file(bucket_name, file_path):
    client = storage.Client()
    bucket = client.get_bucket(bucket_name)
    blob = bucket.blob(file_path)
    return blob.download_as_text()

def load_config_from_gcs(bucket_name, file_path):
    # Read file content from GCS
    config_content = read_gcs_file(bucket_name, file_path)
    
    # Use configparser to parse the configuration content
    config = configparser.ConfigParser()
    config.read_string(config_content)
    
    return config

# Example usage
bucket_name = "your-gcs-bucket-name"
config_file_path = "path/to/paramlist_update.cfg"  # Adjust this path as needed

# Load the configuration from GCS
config = load_config_from_gcs(bucket_name, config_file_path)

# Access the PostgreSQL configuration values
postgres_config = {
    'dbname': config['DEFAULT'].get('dbname', 'Default'),
    'user': config['DEFAULT'].get('user', 'Default'),
    'host': config['DEFAULT'].get('host', 'Default'),
    'port': config['DEFAULT'].get('port', 'Default')
}

# Now you can use `postgres_config` to connect to PostgreSQL
print(postgres_config)
