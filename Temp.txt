from google.cloud import storage
import csv
import io

def read_gcs_csv_to_dict(bucket_name, blob_name):
    """
    Reads a CSV file from GCS and converts each row into a dictionary.
    
    :param bucket_name: Name of the GCS bucket.
    :param blob_name: Path to the CSV file in the GCS bucket.
    :return: List of dictionaries with column names as keys.
    """
    # Initialize a GCS client
    client = storage.Client()
    
    # Get the bucket and the blob (file)
    bucket = client.bucket(bucket_name)
    blob = bucket.blob(blob_name)

    # Download the blob's content as a string
    csv_data = blob.download_as_text()

    # Read the CSV from the string data
    data = []
    csv_reader = csv.DictReader(io.StringIO(csv_data))

    # Iterate over each row and store it as a dictionary
    for row in csv_reader:
        data.append(row)

    return data

def main():
    # GCS bucket and CSV file path
    bucket_name = 'your-gcs-bucket'
    csv_blob_path = 'output/config_data.csv'
    
    # Read the CSV file from GCS and convert it to a list of dictionaries
    result_dicts = read_gcs_csv_to_dict(bucket_name, csv_blob_path)
    
    # Print the result to verify
    for result in result_dicts:
        print(result)

if __name__ == '__main__':
    main()
